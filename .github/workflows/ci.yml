name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  bazel:
    name: bazel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: install
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y libasound-dev
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10
      - name: build
        run: bazel build ...
      - name: test
        run: bazel test --test_output=errors ...

  cmake:
    name: cmake on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: install
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y libasound-dev
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10
      - name: build
        run: |
          mkdir -p cmake-build && cd cmake-build
          cmake ..
          cmake --build .
      - name: test
        run: ctest --output-on-failure
