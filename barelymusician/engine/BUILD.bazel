load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "conductor",
    srcs = ["conductor.cpp"],
    hdrs = ["conductor.h"],
    deps = [
        ":conductor_definition",
        ":param",
        ":param_definition",
        "//barelymusician/common:find_or_null",
        "//barelymusician/common:status",
        "//barelymusician/composition:note_duration",
        "//barelymusician/composition:note_intensity",
        "//barelymusician/composition:note_pitch",
    ],
)

cc_library(
    name = "conductor_definition",
    hdrs = ["conductor_definition.h"],
    deps = [
        ":param_definition",
        "//barelymusician/common:status",
        "//barelymusician/composition:note_duration",
        "//barelymusician/composition:note_intensity",
        "//barelymusician/composition:note_pitch",
    ],
)

cc_library(
    name = "engine",
    srcs = ["engine.cpp"],
    hdrs = ["engine.h"],
    deps = [
        ":conductor",
        ":conductor_definition",
        ":instrument_controller",
        ":instrument_definition",
        ":instrument_manager",
        ":transport",
        "//barelymusician/common:find_or_null",
        "//barelymusician/common:id",
        "//barelymusician/common:id_generator",
        "//barelymusician/common:status",
        "//barelymusician/composition:sequence",
    ],
)

cc_library(
    name = "instrument_controller",
    srcs = ["instrument_controller.cpp"],
    hdrs = ["instrument_controller.h"],
    deps = [
        ":instrument_definition",
        ":instrument_event",
        ":param",
        ":param_definition",
    ],
)

cc_library(
    name = "instrument_definition",
    hdrs = ["instrument_definition.h"],
    deps = [
        ":param_definition",
    ],
)

cc_library(
    name = "instrument_event",
    hdrs = ["instrument_event.h"],
    deps = [
        "//barelymusician/common:id",
    ],
)

cc_library(
    name = "instrument_manager",
    srcs = ["instrument_manager.cpp"],
    hdrs = ["instrument_manager.h"],
    deps = [
        ":instrument_controller",
        ":instrument_definition",
        ":instrument_event",
        ":instrument_processor",
        ":param",
        ":param_definition",
        ":task_runner",
        "//barelymusician/common:find_or_null",
        "//barelymusician/common:id",
        "//barelymusician/common:status",
        "//barelymusician/common:visitor",
        "//barelymusician/dsp:dsp_utils",
    ],
)

cc_library(
    name = "instrument_processor",
    srcs = ["instrument_processor.cpp"],
    hdrs = ["instrument_processor.h"],
    deps = [
        ":instrument_definition",
        ":instrument_event",
        "//barelymusician/common:visitor",
        "//barelymusician/dsp:dsp_utils",
    ],
)

cc_library(
    name = "param",
    srcs = ["param.cpp"],
    hdrs = ["param.h"],
    deps = [
        "param_definition",
    ],
)

cc_library(
    name = "param_definition",
    hdrs = ["param_definition.h"],
)

cc_library(
    name = "task_runner",
    srcs = ["task_runner.cpp"],
    hdrs = ["task_runner.h"],
)

cc_library(
    name = "transport",
    srcs = ["transport.cpp"],
    hdrs = ["transport.h"],
)

cc_test(
    name = "conductor_test",
    srcs = ["conductor_test.cpp"],
    deps = [
        ":conductor",
        ":conductor_definition",
        ":param_definition",
        "//barelymusician/common:status",
        "@googletest//:gtest_main",
    ],
)

# TODO: Refactor and reenable unit tests for instrument manager.
# cc_test(
#     name = "instrument_manager_test",
#     srcs = ["instrument_manager_test.cpp"],
#     deps = [
#         ":instrument_definition",
#         ":instrument_manager",
#         ":param",
#         ":param_definition",
#         "//barelymusician/common:id",
#         "//barelymusician/common:status",
#         "@googletest//:gtest_main",
#     ],
# )

# TODO: Refactor and reenable unit tests for instrument controller & processor.
# cc_test(
#     name = "instrument_test",
#     srcs = ["instrument_test.cpp"],
#     deps = [
#         ":instrument",
#         ":instrument_definition",
#         "@googletest//:gtest_main",
#     ],
# )

cc_test(
    name = "param_test",
    srcs = ["param_test.cpp"],
    deps = [
        ":param",
        ":param_definition",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "task_runner_test",
    srcs = ["task_runner_test.cpp"],
    deps = [
        ":task_runner",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "transport_test",
    srcs = ["transport_test.cpp"],
    deps = [
        ":transport",
        "@googletest//:gtest_main",
    ],
)
