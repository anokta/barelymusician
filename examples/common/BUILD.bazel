load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "audio_clock",
    srcs = ["audio_clock.cpp"],
    hdrs = ["audio_clock.h"],
)

cc_library(
    name = "audio_output",
    srcs = ["audio_output.cpp"],
    hdrs = ["audio_output.h"],
    deps = [
        "@portaudio",
    ],
)

cc_library(
    name = "console_log",
    hdrs = ["console_log.h"],
)

cc_library(
    name = "input_manager",
    srcs = ["input_manager.cpp"],
    hdrs = ["input_manager.h"],
    linkopts = select({
        "@platforms//os:osx": ["-framework ApplicationServices"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "random",
    srcs = ["random.cpp"],
    hdrs = ["random.h"],
)

cc_library(
    name = "wav_file",
    srcs = ["wav_file.cpp"],
    hdrs = ["wav_file.h"],
    deps = [
        "@dr_libs//:dr_wav",
    ],
)

cc_test(
    name = "random_test",
    srcs = ["random_test.cpp"],
    deps = [
        ":random",
        "@googletest//:gtest_main",
    ],
)
